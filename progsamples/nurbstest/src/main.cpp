#include "trimgrid.h"

using namespace RiCPP;

int main (int argc, char * const argv[]) {
    std::cout << "S-T-A-R-T!\n";
    std::cout << "------------------------------\n";

    // insert code here...
    RtFloat knots[] = { 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 3, 3};
    RtInt nknot = sizeof(knots)/sizeof(RtFloat);

    CTrimGrid grid(nknot, knots, 0,   3,   10,
                   nknot, knots, 0.5, 2.5,  3);

    std::cout << "CTrimGrid grid" << std::endl;
    grid.write(std::cout, "    ");

    RtInt nloops = 2;
    RtInt ncurves[] = {1, 1};
    RtInt order[] = { 4, 4};
    RtFloat knot[] = {
        0, 0, 0, 0,
        1, 1, 1, 2, 2, 2, 3, 3, 3,
        4, 4, 4, 5, 5, 5, 6, 6, 6,
        7, 7, 7, 8, 8, 8, 9, 9, 9,
        10, 10, 10, 11, 11, 11, 12, 12, 12,
        13, 13, 13, 14, 14, 14, 15, 15, 15,
        16, 16, 16, 16,

        0, 0, 0, 0,
        1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4,
        5, 5, 5, 5
    };
    RtFloat amin[]  = { 0, 0};
    RtFloat amax[] = { 16, 5 };
    RtInt n[] = { 49, 16 };
    RtFloat u[] = {
        0.216594, 0.228702, 0.257058, 0.459505, 0.627541,
        0.70847 , 0.70847 , 0.70847 , 0.657874, 0.61537,
        0.517633, 0.419601, 0.321863, 0.026317, 0,
        0       , 0       , 0.137641, 0.331995, 0.538457,
        0.645765, 0.714586, 0.72064 , 0.744919, 0.902823,
        0.94335 , 0.969667, 1       , 1       , 1,
        1       , 0.979737, 0.957497, 0.941311, 0.904862,
        0.88256 , 0.88256 , 0.882561, 0.88256 , 0.88256,
        0.88256 , 0.574906, 0.489899, 0.228702, 0.060728,
        0.052635, 0.107234, 0.161995, 0.216594, 0.704454,
        0.704454, 0.542472, 0.376475, 0.242911, 0.184222,
        0.184222, 0.184222, 0.323902, 0.410947, 0.631556,
        0.676098, 0.704454, 0.704455, 0.704454, 0.704454
    };
    RtFloat v[] = {
        0.314607, 0.242316, 0.132002, 0.132002, 0.132002,
        0.186248, 0.285691, 0.379725, 0.394184, 0.397826,
        0.408669, 0.408668, 0.430385, 0.462888, 0.64737,
        0.726947, 0.889686, 1       , 1       , 1,
        0.913195, 0.846256, 0.918603, 0.99095 , 0.99095,
        0.99095 , 0.980078, 0.972849, 0.934315, 0.934314,
        0.857127, 0.860714, 0.864356, 0.864356, 0.864356,
        0.848077, 0.808289, 0.627043, 0.627042, 0.264003,
        0.021688, 0       , 0       , 0       , 0.088571,
        0.314607, 0.314608, 0.314607, 0.314607, 0.645549,
        0.772143, 0.867943, 0.867943, 0.867943, 0.806468,
        0.703438, 0.584074, 0.560565, 0.549694, 0.524419,
        0.509906, 0.490039, 0.541825, 0.541824, 0.645549
    };
    RtFloat w[] = {
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
    };

    CTrimPath trimPath(nloops, ncurves,
                       order, knot,
                       amin, amax,
                       n, u, v, w);

    std::vector<CTrimCoords> trimLoopCoords;
    trimPath.tesselate(trimLoopCoords, 16);

    std::cout << "CTrimPath trimPath" << std::endl;
    trimPath.write(std::cout, "    ");

    writeVector(trimLoopCoords, "trimLoopCoords", std::cout, "");

    std::cout << "------------------------------\n";

    grid.trim(trimPath);

    std::cout << "E-N-D!\n";
    return 0;
}
