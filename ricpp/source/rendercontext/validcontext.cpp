// RICPP - RenderMan Interface CPP Language Binding
//         RenderMan is (R) by Pixar
//         Windows is (R) by Microsoft
//
// Copyright © 2001 - 2002, Andreas Pidde
//
// Contact: andreas@pidde.de
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//  
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

/*! \file validcontext.cpp
 *  \brief Test if interface calls are valid in contexts
 *  \author Andreas Pidde (andreas@pidde.de)
 */

#include "stdafx.h"
#include "validcontext.h"

//////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////
//// class TValidContext

//////////////////////////////////////////////////////////////////////////////
// TValidContext - Initialize s.a. [UPS89] Valid contexts for RenderMan
//                                         Procedurte calls, pp.56
//                                 [RISPEC3.2] definition of the new RI3.2 procs
//
// Purpose: Defines a table of interface function (IDX_...)
//          -> Set of valid contexts (CTX_BIT_...)
//
TValidContext::TValidContext() {

	m_ucInterfaceContext[IDX_ERROR_HANDLER] = CTX_BIT_OUTSIDE | CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_DECLARE] = CTX_BIT_OUTSIDE | CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_BEGIN] = CTX_BIT_OUTSIDE; // Is not checked, because of the context can be called from everywhere
	m_ucInterfaceContext[IDX_END] = CTX_BIT_BEGIN;

	m_ucInterfaceContext[IDX_FRAME_BEGIN] = CTX_BIT_BEGIN;
	m_ucInterfaceContext[IDX_FRAME_END] = CTX_BIT_FRAME;

	m_ucInterfaceContext[IDX_WORLD_BEGIN] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_WORLD_END] = CTX_BIT_WORLD;

	m_ucInterfaceContext[IDX_ATTRIBUTE_BEGIN] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;
	m_ucInterfaceContext[IDX_ATTRIBUTE_END] = CTX_BIT_ATTRIBUTE | CTX_BIT_OBJECT;

	m_ucInterfaceContext[IDX_TRANSFORM_BEGIN] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;
	m_ucInterfaceContext[IDX_TRANSFORM_END] = CTX_BIT_TRANSFORM | CTX_BIT_OBJECT;

	m_ucInterfaceContext[IDX_SOLID_BEGIN] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID;
	m_ucInterfaceContext[IDX_SOLID_END] = CTX_BIT_SOLID;

	m_ucInterfaceContext[IDX_OBJECT_BEGIN] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID;
	m_ucInterfaceContext[IDX_OBJECT_END] = CTX_BIT_OBJECT;

	m_ucInterfaceContext[IDX_MOTION_BEGIN] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID;
	m_ucInterfaceContext[IDX_MOTION_END] = CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_FORMAT] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_FRAME_ASPECT_RATIO] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_SCREEN_WINDOW] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_CROP_WINDOW] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_PROJECTION] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_CLIPPING] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_CLIPPING_PLANE] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_DEPTH_OF_FIELD] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_SHUTTER] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_PIXEL_VARIANCE] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_PIXEL_SAMPLES] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_PIXEL_FILTER] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_EXPOSURE] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_IMAGER] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_QUANTIZE] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_DISPLAY] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_HIDER] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_COLOR_SAMPLES] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_RELATIVE_DETAIL] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_OPTION] = CTX_BIT_OUTSIDE | CTX_BIT_BEGIN | CTX_BIT_FRAME;

	m_ucInterfaceContext[IDX_LIGHT_SOURCE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_AREA_LIGHT_SOURCE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_ATTRIBUTE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_COLOR] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_OPACITY] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_SURFACE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_ATMOSPHERE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_INTERIOR] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_EXTERIOR] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_ILLUMINATE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_DISPLACEMENT] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_TEXTURE_COORDINATES] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_SHADING_RATE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_SHADING_INTERPOLATION] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_MATTE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_BOUND] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_DETAIL] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_DETAIL_RANGE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_GEOMETRIC_APPROXIMATION] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_GEOMETRIC_REPRESENTATION] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_ORIENTATION] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_REVERSE_ORIENTATION] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_SIDES] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_BASIS] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_TRIM_CURVE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_IDENTITY] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_TRANSFORM] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_CONCAT_TRANSFORM] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_PERSPECTIVE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_TRANSLATE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_ROTATE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_SCALE] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_SKEW] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_DEFORMATION] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_COORDINATE_SYSTEM] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_OBJECT | CTX_BIT_SOLID;
	m_ucInterfaceContext[IDX_COORD_SYS_TRANSFORM] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_OBJECT | CTX_BIT_SOLID;
	m_ucInterfaceContext[IDX_TRANSFORM_POINTS] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_OBJECT | CTX_BIT_SOLID;

	m_ucInterfaceContext[IDX_POLYGON] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_GENERAL_POLYGON] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_POINTS_POLYGONS] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_POINTS_GENERAL_POLYGONS] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_PATCH] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_PATCH_MESH] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_NU_PATCH] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_SUBDIVISION_MESH] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_SPHERE] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_CONE] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_CYLINDER] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_HYPERBOLOID] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_PARABOLOID] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_DISK] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_TORUS] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_POINTS] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_CURVES] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_BLOBBY] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_PROCEDURAL] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;
	m_ucInterfaceContext[IDX_PROC_DELAYED_READ_ARCHIVE] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;
	m_ucInterfaceContext[IDX_PROC_RUN_PROGRAM] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;
	m_ucInterfaceContext[IDX_PROC_DYNAMIC_LOAD] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;

	m_ucInterfaceContext[IDX_GEOMETRY] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT;

	m_ucInterfaceContext[IDX_OBJECT_INSTANCE] = CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID;

	m_ucInterfaceContext[IDX_MAKE_TEXTURE] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_MAKE_BUMP] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_MAKE_LAT_LONG_ENVIRONMENT] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_MAKE_CUBE_FACE_ENVIRONMENT] = CTX_BIT_BEGIN | CTX_BIT_FRAME;
	m_ucInterfaceContext[IDX_MAKE_SHADOW] = CTX_BIT_BEGIN | CTX_BIT_FRAME;

	m_ucInterfaceContext[IDX_ARCHIVE_RECORD] = CTX_BIT_OUTSIDE | CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_READ_ARCHIVE] = CTX_BIT_OUTSIDE | CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;

	m_ucInterfaceContext[IDX_GET_CONTEXT] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	m_ucInterfaceContext[IDX_CONTEXT] = CTX_BIT_BEGIN | CTX_BIT_FRAME | CTX_BIT_WORLD | CTX_BIT_ATTRIBUTE | CTX_BIT_TRANSFORM | CTX_BIT_SOLID | CTX_BIT_OBJECT | CTX_BIT_MOTION;
	
	m_ucInterfaceContext[IDX_VERSION] = CTX_BIT_BEGIN;
}


//////////////////////////////////////////////////////////////////////////////
// isValid - returns false if routine is called in an invalid context
//
// Parameters:
//   idxRoutine - Index of the called routine (IDX_...)
//   idxContext - the current context (CTX_...)
//
// Returns:
//   false - invalid context for routine
//   true  - vaild context for routine
//
bool TValidContext::isValid(unsigned int idxRoutine, unsigned int idxContext) const {
	if ( idxRoutine >= (unsigned int)N_TOKENS || idxContext >= (unsigned int)N_CONTEXTS )
		return false;
	return ((m_ucInterfaceContext[idxRoutine] & (unsigned short)1<<idxContext)) != 0;
}
